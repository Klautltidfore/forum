$(document).ready(function() {

	//===== Check all checbboxes =====//
	$("#kisi").css("display", "none");
	$("#helper").css("display", "none");
	$("#yonetici").css("display", "none");

	$('#tip').on('change', function() {
		var id = this.value;
		
		if(id == 1) {
			$("#kisi").fadeIn(500, function(){
				$("#kisi").css("display", "block");
				$("#kisiinp").attr("required", "required");
			});
		}else{
			$("#kisi").fadeOut(500, function(){
				$("#kisi").css("display", "none");
				$("#kisiinp").removeAttr("required");
			});
		}
	});
	
		
	$('#tip').on('change', function() {
		var id = this.value;
		
		if(id == 2) {
			$("#helper").fadeIn(500, function(){
				$("#helper").css("display", "block");
				$("#kisiinp").attr("required", "required");
			});
		}else{
			$("#helper").fadeOut(500, function(){
				$("#helper").css("display", "none");
				$("#kisiinp").removeAttr("required");
			});
		}
	});
	
	$('#tip').on('change', function() {
		var id = this.value;
		
		if(id == 3) {
			$("#yonetici").fadeIn(500, function(){
				$("#yonetici").css("display", "block");
				$("#kisiinp").attr("required", "required");
			});
		}else{
			$("#yonetici").fadeOut(500, function(){
				$("#yonetici").css("display", "none");
				$("#kisiinp").removeAttr("required");
			});
		}
	});
	
	$("#select-all thead tr th:first-child input:checkbox").click(function() {
		var checkedStatus = this.checked;
		$("#select-all tbody tr td:first-child input:checkbox").each(function() {
			this.checked = checkedStatus;
				if (checkedStatus == this.checked) {
					$(this).closest('.checker > span').removeClass('checked');
					$(this).closest('table tbody tr').removeClass('row-checked');
				}
				if (this.checked) {
					$(this).closest('.checker > span').addClass('checked');
					$(this).closest('table tbody tr').addClass('row-checked');
				}
		});
	});	
	
    $('#select-all tbody tr td:first-child input[type=checkbox]').change(function() {
        $(this).closest('tr').toggleClass("row-checked", this.checked);
	});

	//===== Fancybox =====//
	
	$(".lightbox").fancybox({
		'padding': 2
	});

	$(".frame").fancybox({
		'width'				: '75%',
		'height'			: '85%',
        'autoScale'     	: false,
        'transitionIn'		: 'none',
		'transitionOut'		: 'none',
		'type'				: 'iframe'
	});
	
    //===== Table checkboxes =====//

    $('.table-checks tbody tr td:first-child input[type=checkbox]').change(function() {
        $(this).closest('tr').toggleClass("row-checked", this.checked);
	});

	//===== Datatable =====//
	$("#data-table").dataTable().fnDestroy();
	$('#data-table').dataTable({
		"bJQueryUI": false,
		"bAutoWidth": false,
		"sPaginationType": "full_numbers",
		"sDom": '<"datatable-header"fl>t<"datatable-footer"ip>',
		"aaSorting": [[ 0, "desc" ]],
		"oLanguage": {
			"sSearch": "Ara:",
			"sLengthMenu": "<span>Kayıt göster:</span> _MENU_",
			"sEmptyTable": "Kayıt bulunamadı.",
			"sInfo": "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor.",
			"sInfoEmpty": "0 kayıttan 0 - 0 arası gösteriliyor.",
			"sZeroRecords": "Aramanıza uyan sonuç bulunamadı.",
			"sInfoFiltered": "(_MAX_ kayıt arasından)"
		}
    });
	
	//===== jQuery UI sliders =====//

	$( "#slider" ).slider();
	$( "#slider-range" ).slider({
            range: true,
            min: 0,
            max: 500,
            values: [ 75, 300 ],
            slide: function( event, ui ) {
                $( "#amount" ).val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
            }
        });
        $( "#amount" ).val( "$" + $( "#slider-range" ).slider( "values", 0 ) +
            " - $" + $( "#slider-range" ).slider( "values", 1 ) );
			
	$( "#slider-range-min" ).slider({
            range: "min",
            value: 37,
            min: 1,
            max: 700,
            slide: function( event, ui ) {
                $( "#amount2" ).val( "$" + ui.value );
            }
        });
        $( "#amount2" ).val( "$" + $( "#slider-range-min" ).slider( "value" ) );
	
	$( "#slider-range-max" ).slider({
            range: "max",
            min: 1,
            max: 10,
            value: 2,
            slide: function( event, ui ) {
                $( "#amount3" ).val( ui.value );
            }
        });
        $( "#amount3" ).val( $( "#slider-range-max" ).slider( "value" ) );
		
	$( "#eq > span" ).each(function() {
		var value = parseInt( $( this ).text(), 10 );
		$( this ).empty().slider({
			value: value,
			range: "min",
			animate: true,
			orientation: "vertical"
		});
	});
		
	//===== Modals and dialogs =====//

	$("a.bs-alert").click(function(e) {
		e.preventDefault();
		bootbox.alert("Hello world!", function() {
			console.log("Alert Callback");
		});
	});
	
	$("a.confirm").click(function(e) {
		e.preventDefault();
		bootbox.confirm("Are you sure?", function(confirmed) {
			console.log("Confirmed: "+confirmed);
		});
	});
	
	$("a.bs-prompt").click(function(e) {
		e.preventDefault();
		bootbox.prompt("What is your name?", function(result) {
			console.log("Result: "+result);
		});
	});
	
	$("a.dialog").click(function(e) {
		e.preventDefault();
		bootbox.dialog("I am a custom dialog", [{
			"label" : "Success!",
			"class" : "btn-success",
			"callback": function() {
				console.log("great success");
			}
		}, {
			"label" : "Danger!",
			"class" : "btn-danger",
			"callback": function() {
				console.log("uh oh, look out!");
			}
		}, {
			"label" : "Click ME!",
			"class" : "btn-primary",
			"callback": function() {
				console.log("Primary button");
			}
		}, {
			"label" : "Just a button..."
		}, {
			"Condensed format": function() {
				console.log("condensed");
			}
		}]);
	});
	
	$("a.multiple-dialogs").click(function(e) {
		e.preventDefault();

		bootbox.alert("Prepare for multiboxes...", "Argh!");

		setTimeout(function() {
			bootbox.confirm("Are you having fun?", "No :(", "Yeah!", function(result) {
				if (result) {
					bootbox.alert("Glad to hear it!");
				} else {
					bootbox.alert("Aww boo. Click the button below to get rid of all these popups", function() {
						bootbox.hideAll();
					});
				}
			});
		}, 1000);
	});
	
	$("a.dialog-close").click(function(e) {
		e.preventDefault();
		var box = bootbox.alert("This dialog will close in two seconds");
		setTimeout(function() {
			box.modal('hide');
		}, 2000);
	});
	
	$("a.generic-modal").click(function(e) {
		e.preventDefault();
		bootbox.modal('<img src="http://dummyimage.com/600x400/000/fff" alt=""/>', 'Modal popup!');
	});
	
	$("a.dynamic").click(function(e) {
		e.preventDefault();
		var str = $("<p>This content is actually a jQuery object, which will change in 3 seconds...</p>");
		bootbox.alert(str);
		setTimeout(function() {
			str.html("See?");
		}, 3000);
	});
	
	$("a.prompt-default").click(function(e) {
		e.preventDefault();
		bootbox.prompt("What is your favourite JS library?", "Cancel", "OK", function(result) {
			console.log("Result: "+result);
		}, "Bootbox.js");
	});
	
	$("a.onescape").click(function(e) {
		e.preventDefault();
		bootbox.dialog("Dismiss this dialog with the escape key...", {
			"label" : "Press Escape!",
			"class" : "btn-danger",
			"callback": function() {
				console.log("Oi! Press escape!");
			}
		}, {
			"onEscape": function() {
				bootbox.alert("This alert was triggered by the onEscape callback of the previous dialog", "Dismiss");
			}
		});
	});

	$("a.nofade").click(function(e) {
		e.preventDefault();
		bootbox.dialog("This dialog does not fade in or out, and thus does not depend on <strong>bootstrap-transitions.js</strong>.",
		{
			"OK": function() {}
		}, {
			"animate": false
		});
	});

	$("a.nobackdrop").click(function(e) {
		e.preventDefault();
		bootbox.dialog("This dialog does not have a backdrop element",
		{
			"OK": function() {}
		}, {
			"backdrop": false
		});
	});

	$("a.icons-explicit").click(function(e) {
		e.preventDefault();
		bootbox.dialog("Custom dialog with icons being passed explicitly into <b>bootbox.dialog</b>.", [{
			"label" : "Success!",
			"class" : "btn-success",
			"icon"  : "icon-ok-sign icon-white"
		}, {
			"label" : "Danger!",
			"class" : "btn-danger",
			"icon"  : "icon-warning-sign icon-white"
		}, {
			"label" : "Click ME!",
			"class" : "btn-primary",
			"icon"  : "icon-ok icon-white"
		}, {
			"label" : "Just a button...",
			"icon"  : "icon-picture"
		}]);
	});

	$("a.icons-override").click(function(e) {
		e.preventDefault();
		bootbox.setIcons({
			"OK"      : "icon-ok icon-white",
			"CANCEL"  : "icon-ban-circle",
			"CONFIRM" : "icon-ok-sign icon-white"
		});

		bootbox.confirm("This dialog invokes <b>bootbox.setIcons()</b> to set icons for the standard three labels of OK, CANCEL and CONFIRM, before calling a normal <b>bootbox.confirm</b>", function(result) {
			bootbox.alert("This dialog is just a standard <b>bootbox.alert()</b>. <b>bootbox.setIcons()</b> only needs to be set once to affect all subsequent calls", function() {
				bootbox.setIcons(null);
			});
		});
	});

	$("a.no-close-button").click(function(e) {
		e.preventDefault();
		bootbox.dialog("If a button's handler now explicitly returns <b>false</b>, the dialog will not be closed. Note that if anything <b>!== false</b> - e.g. nothing, true, null etc - is returned, the dialog will close.", [{
			"I'll close on click": function() {
				console.log("close on click");
				return true;
			},
		}, {
			"I won't!": function() {
				console.log("returning false...");
				return false;
			}
		}]);
	});
	
	//===== Autogrowing textarea =====//
	
	$('.auto').autosize();

	//===== Bootstrap functions =====//

	// Loading button
    $('#loading').click(function () {
        var btn = $(this)
        btn.button('loading')
        setTimeout(function () {
          btn.button('reset')
        }, 3000);
	});


    // Typeahead
	$('.typeahead').typeahead();


	// Popover
	$('.popover-test').popover({
		placement: 'left'
	})
	.click(function(e) {
		e.preventDefault()
	});

	$("a[rel=popover]")
		.popover()
	.click(function(e) {
		e.preventDefault()
	})


	// Progress bars
	$('.progress .bar.filled-text').progressbar({
        display_text: 1
    });
	
	$('.slim .bar').progressbar();
	
	$('.delay .bar').progressbar({
		display_text: 1,
        transition_delay: 2000
    });
	
	$('.value .bar').progressbar({
		display_text: 1,
        use_percentage: false
    });
	
	$('.progress .bar.centered-text').progressbar({
        display_text: 2
    });
	
	$('.progress .no-text').progressbar();


	//===== Validation =====//

	$("#usualValidate").validate({
		rules: {
			firstname: "required",
			minChars: {
				required: true,
				minlength: 3
			},
			maxChars: {
				required: true,
				maxlength: 6
			},
			mini: {
				required: true,
				min: 3
			},
			maxi: {
				required: true,
				max: 6
			},
			range: {
				required: true,
				range: [6, 16]
			},
			emailField: {
				required: true,
				email: true
			},
			urlField: {
				required: true,
				url: true
			},
			dateField: {
				required: true,
				date: true
			},
			digitsOnly: {
				required: true,
				digits: true
			},
			enterPass: {
				required: true,
				minlength: 5
			},
			repeatPass: {
				required: true,
				minlength: 5,
				equalTo: "#enterPass"
			},
			customMessage: "required",
			topic: {
				required: "#newsletter:checked",
				minlength: 2
			},
			agree: "required"
		},
		messages: {
			customMessage: {
				required: "Bazinga! This message is editable",
			},
			agree: "Please accept our policy"
		},
	    highlight: function(label) {
	    	$(label).closest('.control-group').addClass('error');
	    },
	    success: function(label) {
	    	label
	    		.text('Success!').addClass('valid')
	    		.closest('.control-group').addClass('success');
	    }
	});

	//===== Top nav and responsive functions =====//

	$('.topnav > li.search > a').click(function () {
		$('.top-search').fadeToggle(50);
	});

	$('.sidebar-button > a').toggle(function () {
		$('.sidebar').addClass('show-sidebar').removeClass('hide-sidebar');
	},
	function () {
		$('.sidebar').removeClass('show-sidebar').addClass('hide-sidebar');
	}
	);

	//===== Collapsible plugin for main nav =====//
	$('.expand').collapsible({
		defaultOpen: 'current',
		cookieName: 'navAct',
		cssOpen: 'subOpened',
		cssClose: 'subClosed',
		speed: 200
	});
	

	//===== Input limiter =====//
	
	$('.lim').inputlimiter({
		limit: 300,
		boxId: 'limitingtext',
		boxAttach: false
	});

	//===== Top notification bars =====//
	
	$(".notice .close").click(function() {
		$(this).parent().parent('.notice').fadeTo(200, 0.00, function(){ //fade
			$(this).slideUp(200, function() { //slide up
				$(this).remove(); //then remove from the DOM
			});
		});
	});	
	
	window.setTimeout(function() {
	    $(".closing").fadeTo(200, 0).slideUp(200, function(){
	        $(this).remove(); 
	    });
	}, 5000);

	//===== Form elements styling =====//
});